openapi: "3.0.2"
info:
  title: WalkAware Trento API
  version: "1.0"
servers:
  - url: https://walkaware.onrender.com/api/v1
    description: Produzione
  - url: http://localhost:3000/api/v1
    description: Localhost
paths:

  /utente/mobile:
    post:
      summary: Crea un nuovo utente mobile
      description: Endpoint per creare un nuovo utente mobile.
      tags:
        - UtenteMobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtenteMobileRegistrazioneRequest"
      responses:
        "201":
          description: Created. Nuovo utente mobile creato con successo. Link in Location header.
          headers:
            Location:
              schema:
                type: string
              description: Link al nuovo utente mobile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostSuccessfulResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /utente/mobile/login:
    post:
      summary: Login utente mobile
      description: Endpoint per il login di un utente mobile.
      tags:
        - UtenteMobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: OK. Login con successo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtenteMobileLoginResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Not Authorized. Credenziali non valide.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthError"

  /utente/mobile/{id}/segnalazioni:
    get:
      summary: Restituisce tutte le segnalazioni di un utente.
      description: Endpoint per ottenere tutte le segnalazioni di un utente.
      tags:
        - UtenteMobile
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'utente mobile
      responses:
        "200":
          description: OK. Segnalazioni trovate.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SegnalazioneResponse"
        "404":
          description: Not Found. Utente con l'id specificato non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Crea una nuova segnalazione
      description: Endpoint per creare una nuova segnalazione. Verr√† aggiunta sia all'utente specificato che nella collezione delle segnalazioni.
      tags:
        - UtenteMobile
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'utente mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtenteMobileSegnalazioneRequest"
      responses:
        "201":
          description: Created. Nuova segnalazione creata con successo. Link in Location header.
          headers:
            Location:
              schema:
                type: string
              description: Link alla nuova segnalazione.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostSuccessfulResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found. Utente con l'id specificato non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /utente/mobile/{id}/punti:
    get:
      summary: Punti dell'utente mobile
      description: Endpoint per ottenere i punti di un utente mobile
      tags:
        - UtenteMobile
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'utente mobile
      responses:
        "200":
          description: OK. Punteggio dell'utente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtenteMobilePuntiResponse"
        "404":
          description: Not Found. Utente con l'id specificato non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Aggiorna i punti dell'utente mobile
      description: Endpoint per aggiornare i punti di un utente mobile
      tags:
        - UtenteMobile
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'utente mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtenteMobilePuntiRequest"
      responses:
        "200":
          description: OK. Punti aggiornati con successo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtenteMobilePuntiResponse"
        "404":
          description: Utente con l'id specificato non trovato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"    
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"      

  /utente/web:
    post:
      summary: Crea un nuovo utente web
      description: Endpoint per creare un nuovo utente web.
      tags:
        - UtenteWeb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtenteWebRegistrazioneRequest"
      responses:
        "201":
          description: Created. Nuovo utente web creato con successo. Link in Location header.
          headers:
            Location:
              schema:
                type: string
              description: Link al nuovo utente web.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostSuccessfulResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /utente/web/login:
    post: 
      summary: Login utente web
      description: Endpoint per il login di un utente mobile.
      tags:
        - UtenteWeb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: OK. Login con successo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtenteWebLoginResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Not Authorized. Credenziali non valide.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthError"

  /aziende:
    get:
      summary: Cerca tutte le aziende convenzionate 
      description: Endpoint che ritorna tutte le aziende convenzionate
      tags:
        - Aziende
      security:
        - apiKeyAuth: []
      responses:
        "200":
          description: OK. Lista di aziende, potrebbe essere vuota.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AziendeGetResponse"
        "500":
          description: Internal Server Error. Errore interno al server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post: 
      summary: Inserisce una nuova azienda 
      description: Endpoint per inserire un'azienda
      tags:
        - Aziende
      security:
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AziendeRegistrazioneRequest"
      responses:
        "201":
          description: OK. Azienda aggiunta con successo.
          headers:
            Location:
              schema:
                type: string
              description: Link alla nuova azienda.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostSuccessfulResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error. Errore interno al server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        
  /aziende/{id}:
    get:
      summary: Restituisce un'azienda.
      description: Endpoint per ottenere un'azienda
      tags:
        - Aziende
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'azienda
      responses:
        "200":
          description: OK. Azienda trovata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AziendaGetResponse"
        "404":
          description: Not Found. Azienda con l'id specificato non trovata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
    put:
      summary: Aggiorna informazioni di un'azienda.
      description: "Endpoint per aggiornare informazioni di un'azienda. Campi aggiornabili: email, partita iva e password."
      tags:
        - Aziende
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'azienda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AziendeModificaRequest"
      responses:
        "200":
          description: OK. Azienda aggiornata con successo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostSuccessfulResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found. Azienda con l'id specificato non trovata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /aziende/{id}/premi:
    post:
      summary: Inserisce un nuovo premio
      description: Endpoint per inserire un nuovo premio
      tags:
        - Aziende
      security:
        - apiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'azienda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PremioRegistrazioneRequest"
      responses:
        "201":
          description: Created. Nuovo premio creato con successo. Link in Location header.
          headers:
            Location:
              schema:
                type: string
              description: Link al nuovo premio.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostSuccessfulResponse"
        "400":
          description: Bad Request. Richiesta errata, vedi errore nel corpo della risposta.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found. Azienda con l'id specificato non trovata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-access-token

  schemas:
    UtenteMobileRegistrazioneRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email dell'utente
        nome:
          type: string
          description: Nome dell'utente
        eta:
          type: string
          description: Et√† dell'utente
        password:
          type: string
          description: Hash della password dell'utente
      required:
        - email
        - nome
        - eta
        - password

    PostSuccessfulResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se la richiesta √® andata a buon fine o meno.

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email dell'utente
        password:
          type: string
          description: Hash della password dell'utente
      required:
        - password
        - email

    UtenteMobileLoginResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se il login √® stato effettuato con successo
        message:
          type: string
          description: Messaggio di risposta
        token:
          type: string
          description: Token di autenticazione
        self:
          type: string
          description: Link all'utente mobile
        email:
          type: string
          format: email
          description: Email dell'utente
        userId:
          type: string
          description: ID dell'utente
        name:
          type: string
          description: Nome dell'utente
        points:
          type: number
          description: Punti dell'utente

    UtenteMobileSegnalazioneRequest:
      type: object
      properties:
        luogo:
          type: string
          description: Coordinate del luogo della segnalazione
          format: lat,lon
        foto:
          type: string
          description: URL della foto della segnalazione
        tipo:
          type: string
          description: Tipo della segnalazione
          format: enum
          enum:
            - strada
            - illuminazione
            - segnaletica
            - sicurezza
            - barriereArchitettoniche
            - rifiuti
            - parcheggi
            - altro
        urgenza:
          type: string
          description: Urgenza percepita della segnalazione
          format: enum
          enum:
            - bassa
            - medio-bassa
            - modio-alta
            - alta
        status:
          type: string
          description: Stato della segnalazione
          format: enum
          enum:
            - aperta
            - inCorso
            - chiusa
          default: aperta
      required:
        - luogo
        - tipo
        - urgenza

    SegnalazioneResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se la richiesta √® andata a buon fine o no
        segnalazioni:
          type: array
          items:
            type: object
            properties:
              luogo:
                type: string
                description: Coordinate del luogo della segnalazione
                format: lat,lon
              foto:
                type: string
                description: URL della foto della segnalazione
              tipo:
                type: string
                description: Tipo della segnalazione
                format: enum
                enum:
                  - strada
                  - illuminazione
                  - segnaletica
                  - sicurezza
                  - barriereArchitettoniche
                  - rifiuti
                  - parcheggi
                  - altro
              urgenza:
                type: string
                description: Urgenza percepita della segnalazione
                format: enum
                enum:
                  - bassa
                  - medio-bassa
                  - modio-alta
                  - alta
              status:
                type: string
                description: Stato della segnalazione
                format: enum
                enum:
                  - aperta
                  - inCorso
                  - chiusa
              id:
                type: string
                description: ID della segnalazione

    UtenteMobilePuntiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se la richiesta √® andata a buon fine o no
        punti:
          type: number
          description: Punti dell'utente

    UtenteMobilePuntiRequest:
      type: object
      properties:
        punti:
          type: number
          description: Nuovo punteggio

    UtenteWebRegistrazioneRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email dell'utente
        nome:
          type: string
          description: Nome dell'utente
        password:
          type: string
          description: Hash della password dell'utente
        supporto_tecnico:
          type: boolean
          description: Indica se l'utente √® un supporto tecnico
          default: false
      required:
        - password
        - email
        - nome

    UtenteWebLoginResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se il login √® stato effettuato con successo
        message:
          type: string
          description: Messaggio di risposta
        token:
          type: string
          description: Token di autenticazione
        self:
          type: string
          description: Link all'utente web
        email:
          type: string
          format: email
          description: Email dell'utente
        userId:
          type: string
          description: ID dell'utente
        name:
          type: string
          description: Nome dell'utente

    Error:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se la richiesta √® andata a buon fine o no
          default: false
        error:
          type: string
          description: Messaggio di errore
      
    AuthError:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se la richiesta √® andata a buon fine o no
          default: false
        error:
          type: string
          description: Indica l'errore di autenticazione
    
    AziendeGetResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Ritorna la lista di tutte le aziende
        aziende:
          type: array
          description: Lista di aziende 
          items: 
            type: object
            properties:
              nome: 
                type: string
                description: Nome dell'azienda
              email:
                type: string
                format: email
                description: Email dell'azienda
              password: 
                type: string
                description: Hash della password dell'azienda
              p_iva: 
                type: string
                description: Partita IVA dell'azienda
              premi:
                type: array
                items:
                  type: object
                  properties:
                    nome:
                      type: string
                      description: Nome del premio
                    valore:
                      type: number
                      description: Valore del premio
                    tipo:
                      type: string
                      enum:
                        - percentuale
                        - contante
                        - omaggio
                        - quantita
                      description: Tipo del premio
                    descrizione:
                      type: string
                      description: Descrizione del premio
                    costo_punti:
                      type: number
                      description: Costo in punti del premio
                    idAzienda:
                      type: string
                      description: Nome dell'azienda che offre il premio
                    validitaBuono:
                      type: number
                      description: Giorni di validit√† dal riscatto del buono

    AziendaGetResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Ritorna l'azienda con l'ID indicato
        azienda:
          type: object
          description: Azienda con l'ID indicato
          properties:
            nome: 
              type: string
              description: Nome dell'azienda
            email:
              type: string
              format: email
              description: Email dell'azienda
            password: 
              type: string
              description: Hash della password dell'azienda
            p_iva: 
              type: string
              description: Partita IVA dell'azienda
            premi:
              type: array
              items:
                type: object
                properties:
                  nome:
                    type: string
                    description: Nome del premio
                  valore:
                    type: number
                    description: Valore del premio
                  tipo:
                    type: string
                    enum:
                      - percentuale
                      - contante
                      - omaggio
                      - quantita
                    description: Tipo del premio
                  descrizione:
                    type: string
                    description: Descrizione del premio
                  costo_punti:
                    type: number
                    description: Costo in punti del premio
                  idAzienda:
                    type: string
                    description: Nome dell'azienda che offre il premio
                  validitaBuono:
                    type: number
                    description: Giorni di validit√† dal riscatto del buono
  
    AziendeRegistrazioneRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email dell'aziende
        nome:
          type: string
          description: Nome dell'azienda
        password:
          type: string
          description: Hash della password dell'azienda
        p_iva:
          type: string
          description: Partita IVA dell'azienda
      required:
        - password
        - email
        - nome     
        - p_iva

    AziendeModificaRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Nuova email dell'azienda
        password:
          type: string
          description: Nuova password dell'azienda
        p_iva:
          type: string
          description: Nuova partita IVA dell'azienda
      required:
        - email
        - p_iva

    PremioRegistrazioneRequest:
      type: object
      properties:
        nome:
          type: string
          description: Nome del premio
        valore:
          type: number
          description: Valore del premio
        tipo:
          type: string
          enum:
            - percentuale
            - contante
            - omaggio
            - quantita
          description: Tipo del premio
        descrizione:
          type: string
          description: Descrizione del premio
        costo_punti:
          type: number
          description: Costo in punti del premio
        idAzienda:
          type: string
          description: Nome dell'azienda che offre il premio
        validitaBuono:
          type: number
          description: Giorni di validit√† dal riscatto del buono
      required:
        - nome
        - valore
        - tipo
        - descrizione
        - costo_punti
        - validitaBuono
        - idAzienda
